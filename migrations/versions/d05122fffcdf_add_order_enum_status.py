"""Add order enum_status

Revision ID: d05122fffcdf
Revises: b45ce24ab79f
Create Date: 2024-08-15 21:17:36.769314

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d05122fffcdf"
down_revision: Union[str, None] = "b45ce24ab79f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

from enum import Enum
from sqlalchemy import Enum as SQLAlchemyEnum
from sqlalchemy.dialects.postgresql import ENUM as PgEnum


class StatusEnum(Enum):
    EXECUTED = "executed"
    PROCESSED = "processed"
    ERROR = "error"

SQLAlchemyStateEnum = SQLAlchemyEnum(StatusEnum, name="status_enum", create_type=False)

def _get_order_status():
    return PgEnum("EXECUTED", "PROCESSED", "ERROR", name="status_enum")


def upgrade() -> None:
    order_status = _get_order_status()
    order_status.create(op.get_bind())
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("order", sa.Column("status", order_status, nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("order", "status")
    # ### end Alembic commands ###
